<?xml version="1.0" encoding="UTF-8"?>
<!--
This file was generated by Altova MapForce 2009sp1

YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.

Refer to the Altova MapForce Documentation for further details.
http://www.altova.com/mapforce
-->
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:n="http://GCML/1.0" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:xmi="http://www.omg.org/XMI" xmlns:xs="http://www.w3.org/2001/XMLSchema" exclude-result-prefixes="ecore n xmi xs xsi xsl">
	<xsl:output method="xml" encoding="UTF-8" indent="yes"/>
	<xsl:template match="/">
		<UserSchema>
			<xsl:attribute name="xsi:noNamespaceSchemaLocation">
				<xsl:value-of select="'XCML.xsd'"/>
			</xsl:attribute>
			<xsl:variable name="var1_instance" select="."/>
			<xsl:for-each select="$var1_instance/n:GCMLDocument">
				<xsl:attribute name="communicationID">
					<xsl:value-of select="string(@CommunicationID)"/>
				</xsl:attribute>
			</xsl:for-each>
			<xsl:for-each select="$var1_instance/n:GCMLDocument">
				<xsl:variable name="var4_GCMLDocument" select="."/>
				<xsl:for-each select="connection">
					<xsl:variable name="var6_connection" select="."/>
					<connection>
						<xsl:attribute name="connectionID">
							<xsl:value-of select="string(@ConnectionID)"/>
						</xsl:attribute>
						<xsl:for-each select="$var4_GCMLDocument/device">
							<xsl:variable name="var8_device" select="."/>
							<xsl:variable name="var10_cond_result_exists">
								<xsl:if test="string(boolean($var6_connection/@Device)) != 'false'">
									<xsl:if test="string(contains(string($var6_connection/@Device), string(@DeviceID))) != 'false'">
										<xsl:value-of select="'1'"/>
									</xsl:if>
								</xsl:if>
							</xsl:variable>
							<xsl:if test="string(boolean(string($var10_cond_result_exists))) != 'false'">
								<device>
									<xsl:attribute name="deviceID">
										<xsl:value-of select="string(@DeviceID)"/>
									</xsl:attribute>
									<xsl:for-each select="$var4_GCMLDocument/capability">
										<xsl:if test="string(contains(string($var8_device/@Capability), string(@CapabilityID))) != 'false'">
											<deviceCapability>
												<xsl:value-of select="string(@BuiltInType)"/>
											</deviceCapability>
										</xsl:if>
									</xsl:for-each>
								</device>
							</xsl:if>
						</xsl:for-each>
						<xsl:for-each select="$var4_GCMLDocument/medium">
							<xsl:variable name="var13_medium" select="."/>
							<xsl:if test="$var13_medium/@MediumURL">
								<xsl:variable name="var15_cond_result_exists">
									<xsl:if test="string(boolean($var6_connection/@Medium)) != 'false'">
										<xsl:if test="string(contains(string($var6_connection/@Medium), string(@MediumID))) != 'false'">
											<xsl:value-of select="'1'"/>
										</xsl:if>
									</xsl:if>
								</xsl:variable>
								<xsl:if test="string(boolean(string($var15_cond_result_exists))) != 'false'">
									<mediumTypeNameRef>
										<xsl:choose>
											<xsl:when test="string((string(@MediumURL) = '_')) != 'false'">
												<xsl:value-of select="string(@MediumID)"/>
											</xsl:when>
											<xsl:otherwise>
												<xsl:value-of select="string(@MediumURL)"/>
											</xsl:otherwise>
										</xsl:choose>
									</mediumTypeNameRef>
								</xsl:if>
							</xsl:if>
						</xsl:for-each>
					</connection>
				</xsl:for-each>
			</xsl:for-each>
			<xsl:for-each select="$var1_instance/n:GCMLDocument/medium">
				<xsl:variable name="var16_medium" select="."/>
				<mediumType>
					<xsl:if test="$var16_medium/@MediumURL">
						<xsl:attribute name="mediumTypeName">
							<xsl:choose>
								<xsl:when test="string((string(@MediumURL) = '_')) != 'false'">
									<xsl:value-of select="string(@MediumID)"/>
								</xsl:when>
								<xsl:otherwise>
									<xsl:value-of select="string(@MediumURL)"/>
								</xsl:otherwise>
							</xsl:choose>
						</xsl:attribute>
					</xsl:if>
					<xsl:if test="$var16_medium/@BuiltInType">
						<xsl:attribute name="derivedFromBuiltInType">
							<xsl:value-of select="string(@BuiltInType)"/>
						</xsl:attribute>
					</xsl:if>
				</mediumType>
			</xsl:for-each>
			<xsl:for-each select="$var1_instance/n:GCMLDocument/person">
				<person>
					<xsl:attribute name="personName">
						<xsl:value-of select="string(@PersonName)"/>
					</xsl:attribute>
					<xsl:attribute name="personID">
						<xsl:value-of select="string(@PersonID)"/>
					</xsl:attribute>
					<xsl:attribute name="personRole">
						<xsl:value-of select="string(@PersonRole)"/>
					</xsl:attribute>
				</person>
			</xsl:for-each>
			<xsl:for-each select="$var1_instance/n:GCMLDocument/isAttached">
				<isAttached>
					<xsl:attribute name="personID">
						<xsl:value-of select="string(@PersonID)"/>
					</xsl:attribute>
					<xsl:attribute name="deviceID">
						<xsl:value-of select="string(@DeviceID)"/>
					</xsl:attribute>
				</isAttached>
			</xsl:for-each>
		</UserSchema>
	</xsl:template>
</xsl:stylesheet>
